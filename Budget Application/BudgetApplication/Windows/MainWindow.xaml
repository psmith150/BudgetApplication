<Window x:Class="BudgetApplication.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BudgetApplication.Windows"
        xmlns:valueConverters="clr-namespace:BudgetApplication.ValueConverters"
        xmlns:customControls="clr-namespace:BudgetApplication.CustomControls"
        xmlns:screens="clr-namespace:BudgetApplication.Screens"
        mc:Ignorable="d"
        Background="White"
        Icon="/Images/Dollar_sign.png" 
        Height="400" Width="900" WindowState="Maximized" 
        Style="{StaticResource MainWindowStyle}"
        ResizeMode="CanResizeWithGrip"
        MinWidth="780"
        Title="{Binding Session.CurrentYear, StringFormat=Budget Manager: {0}}"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        TextElement.Foreground="Black">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <valueConverters:TypeToBoolConverter x:Key="TypeToBoolConverter" />
        <valueConverters:ViewModelToViewConverter x:Key="ViewModelToViewConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="D" Modifiers="Control+Shift" Command="{Binding ToggleEventLogVisibiliyCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveDataCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadDataCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewFileCommand}"/>
    </Window.InputBindings>
    <Grid Background="{StaticResource MainBackgroundColor}">
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save" Command="{Binding SaveDataCommand}"/>
                    <MenuItem Header="SaveAs" Command="{Binding SaveDataAsCommand}"/>
                    <MenuItem Header="_Open" Command="{Binding LoadDataCommand}"/>
                    <MenuItem Header="_New" Command="{Binding NewFileCommand}"/>
                    <MenuItem Header="_Recent" ItemsSource="{Binding LastFiles}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding DataContext.OpenRecentFileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Header}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Setup">
                    <MenuItem Header="Groups/Categories" Command="{Binding OpenGroupsAndCategoriesCommand}"/>
                    <MenuItem Header="Payment Methods" Command="{Binding OpenPaymentMethodsCommand}"/>
                    <MenuItem Header="Change Year" Command="{Binding ChangeYearCommand}"/>
                </MenuItem>
                <MenuItem Header="Settings" Command="{Binding OpenSettingsCommand}"/>
            </Menu>
            <Grid DockPanel.Dock="Top"
                   Height="40"
                   Background="Transparent">
                <UniformGrid Rows="1" HorizontalAlignment="Left">
                    <customControls:HoverButton Content="Budget" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:BudgetViewModel}"
                                                Command="{Binding NavigateToScreenCommand}"
                                                IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:BudgetViewModel}}"/>
                    <customControls:HoverButton Content="Spending" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:SpendingViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:SpendingViewModel}}"/>
                    <customControls:HoverButton Content="Comparison" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:ComparisonViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:ComparisonViewModel}}"/>
                    <customControls:HoverButton Content="Month Details" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:MonthDetailViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:MonthDetailViewModel}}"/>
                    <customControls:HoverButton Content="Transactions" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:TransactionsViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:TransactionsViewModel}}"/>
                    <customControls:HoverButton Content="Payment Methods" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:PaymentsViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:PaymentsViewModel}}"/>
                    <customControls:HoverButton Content="Reports" Style="{DynamicResource NavigationHoverButtonStyle}" CommandParameter="{x:Type screens:GraphViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:GraphViewModel}}"/>

                </UniformGrid>
            </Grid>
            <Separator DockPanel.Dock="Top" Style="{DynamicResource SeparatorStyle}"/>
            <DockPanel DockPanel.Dock="Bottom" Style="{DynamicResource BottomBarStyle}">
                <Button DockPanel.Dock="Right" ToolTip="Open the help menu." Style="{DynamicResource HelpButtonStyle}" Command="{Binding OpenHelpCommand}">
                    <Image Source="/Images\Question_16x.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Button>
                <TextBlock DockPanel.Dock="Right" Text="{Binding AppVersion, StringFormat=Version: {0}}" />
            </DockPanel>
            <ContentPresenter Content="{Binding NavigationService.ActiveViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
        </DockPanel>

        <!-- Popup --><!--
        <Grid Background="Transparent" Visibility="{Binding NavigationService.IsPopupActive, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" 
                  Style="{DynamicResource OverlayGridStyle}" />
            <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{Binding NavigationService.ActivePopupViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
        </Grid>

        --><!-- Message Window --><!--
        <Grid Background="Transparent" Visibility="{Binding MessageViewer.IsMessageActive, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" 
                  Style="{DynamicResource OverlayGridStyle}" />
            <Border Grid.Row="1" Grid.Column="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="2">
                <Grid Background="{DynamicResource MainBackgroundColor}" Width="300" Height="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Background="{DynamicResource MainBackgroundColor}" Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Image Source="{Binding MessageViewer.Icon}" Height="16"/>
                        <TextBlock Text="{Binding MessageViewer.Title}"/>
                    </StackPanel>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Background="White">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Source="{Binding MessageViewer.Icon}" Height="32" VerticalAlignment="Top" Margin="5,20,5,5"/>
                            <TextBlock Grid.Column="1" Text="{Binding MessageViewer.ActiveMessage}" TextWrapping="Wrap" HorizontalAlignment="Stretch" TextAlignment="Left" VerticalAlignment="Stretch" Margin="15,15,5,5"/>
                        </Grid>
                    </ScrollViewer>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Background="{DynamicResource MainBackgroundColor}">
                        <Button Content="OK" Style="{DynamicResource PopupOkCloseButtonStyle}" Command="{Binding MessageViewer.CloseOkCommand}" Visibility="{Binding MessageViewer.UseOkButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Separator Width="15" Background="Transparent" Visibility="{Binding MessageViewer.UseCancelButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button Content="Cancel" Style="{DynamicResource PopupOkCloseButtonStyle}" Command="{Binding MessageViewer.CloseCancelCommand}" Visibility="{Binding MessageViewer.UseCancelButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        --><!-- Busy Window --><!--
        <Grid Background="Transparent" Visibility="{Binding Session.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" Style="{StaticResource OverlayGridStyle}" />
            <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource PopupBorderStyle}">
                <Grid Width="300" Height="200" Background="{DynamicResource BusyWindowBackgroundColor}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>
                    <ProgressBar Grid.Row="2" IsIndeterminate="True" Height="25" Margin="10" />
                </Grid>
            </Border>
        </Grid>-->
    </Grid>
</Window>
