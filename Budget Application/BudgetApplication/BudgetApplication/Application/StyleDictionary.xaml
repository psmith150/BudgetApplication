<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BudgetApplication">
    <Style x:Key="TabHeader" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                            Name="Border"
                            Margin="0,0,-4,0" 
                            Background="Green"
                            BorderBrush="Black" 
                            BorderThickness="1,1,1,1" 
                            CornerRadius="2,12,0,0" >
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="12,2,12,2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGreen" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="AllowsTransparency" Value="False"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="46"/>
        <!--CaptionHeight + ResizeBorderThickness * 2-->
        <Setter Property="Background" Value="Green"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="Orange"/>
    </Style>
    
    <ControlTemplate x:Key="BudgetView">
        <Grid>
            
        </Grid>
    </ControlTemplate>
    <Style x:Key="AddGroupButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="DarkGray" BorderThickness="1" Background="Transparent">
                        <TextBlock Text="+" Foreground="Green" FontWeight="ExtraBold" HorizontalAlignment="Center" Background="Transparent"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RemoveGroupButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="DarkGray" BorderThickness="1" Background="Transparent">
                        <TextBlock Text="-" Foreground="Red" FontWeight="ExtraBold" HorizontalAlignment="Center" Background="Transparent"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveUpButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="DarkGray" BorderThickness="1" Background="Transparent">
                        <Image Source="/Resources/Up_arrow.png" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveDownButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="DarkGray" BorderThickness="1" Background="Transparent">
                        <Image Source="/Resources/Down_arrow.png" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupedStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True" Background="#FF112255" BorderBrush="#FF002255" BorderThickness="1,1,1,5" ExpandDirection="Down" ClipToBounds="True">
                        <Expander.Header>
                            <DockPanel>
                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="150" Foreground="White"/>
                                <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}" Foreground="White"/>
                            </DockPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <ItemsPresenter />
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnSeparatorStyle" TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="Gray"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectedCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#BF0080FF" />
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>